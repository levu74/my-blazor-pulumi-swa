trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - "**/*"

variables:
  - name: solution
    value: src/BlazorApp.slnx
  - name: buildPlatform
    value: "Any CPU"
  - name: buildConfiguration
    value: "Release"
  - name: publishLocation
    value: "$(Build.ArtifactStagingDirectory)/publish"

  - group: my-blazor-pulumi-swa.deploy-to-swa

pool:
  name: $(ado.poolName)
  vmImage: $(ado.vmImage)

stages:
  - stage: BuildBlazorApp
    displayName: "Build Blazor App"
    dependsOn: []
    jobs:
      - job: BuildBlazorApp
        displayName: "Build Blazor App"
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: "sdk"
              version: "9.x"
              installationPath: "$(Agent.ToolsDirectory)/dotnet"

          - script: |
              dotnet build $(solution) --configuration $(buildConfiguration)
            displayName: "Build Solution"

          - script: |
              dotnet publish $(solution) --configuration $(buildConfiguration) --output $(publishLocation)
            displayName: "Publish Blazor App"
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(publishLocation)"
              ArtifactName: "BlazorApp"
              publishLocation: "Container"

  - stage: Infrastructure
    displayName: "Deploy Infrastructure"
    dependsOn: []
    jobs:
      - job: PulumiUp
        displayName: "Deploy Infrastructure"
        steps:
          - task: UseDotNet@2
            inputs:
              packageType: "sdk"
              version: "9.x"
              installationPath: "$(Agent.ToolsDirectory)/dotnet"
          # - script: |
          #     curl -fsSL https://get.pulumi.com | sh
          #     echo "##vso[task.prependpath]$HOME/.pulumi/bin"
          #     export PATH=$PATH:$HOME/.pulumi/bin
          #   displayName: "Setup Pulumi"
          # - script: |
          #     export PATH=$PATH:$HOME/.pulumi/bin
          #     pulumi login
          #   env:
          #     PULUMI_ACCESS_TOKEN: $(pulumiAccessToken)
          #   displayName: "Login to Pulumi"

          # - task: AzureCLI@2
          #   inputs:
          #     azureSubscription: $(ado.azureServiceConnection)
          #     scriptType: "bash"
          #     scriptLocation: "inlineScript"
          #     inlineScript: |
          #       export ARM_USE_OIDC="true"
          #       export ARM_SUBSCRIPTION_ID="$(az account show --query id --output tsv | cut -d'/' -f3)"
          #       export ARM_CLIENT_ID=${servicePrincipalId}
          #       export ARM_TENANT_ID=${tenantId}
          #       export AZURE_CLIENT_ID=${servicePrincipalId}
          #       export AZURE_FEDERATED_TOKEN=${idToken}
          #       export AZURE_TENANT_ID=${tenantId}
          #       export ARM_OIDC

          #       pulumi up --stack $(environment) --yes
          #     workingDirectory: infra/pulumi/Blazor.Infra.Pulumi
          #     addSpnToEnvironment: true
          #   displayName: Deploy Infrastructure
          - task: Pulumi@1
            inputs:
              azureSubscription: $(ado.azureServiceConnection)
              command: up
              cwd: infra/pulumi/Blazor.Infra.Pulumi
              stack: $(environment)
              args: "--yes"

  - stage: Deploy
    displayName: "Deploy Blazor App"
    dependsOn:
      - Infrastructure
      - BuildBlazorApp
    condition: ne(variables['ado.azureStaticWebAppToken'], '')
    jobs:
      - job: DeployBlazorApp
        displayName: "Deploy Blazor App"
        steps:
          - script: |
              echo "Deploying Blazor App to Static Web Apps"
            displayName: "Deploy Blazor App"
          # Download the published Blazor app artifact
          - download: current
            artifact: BlazorApp
            displayName: "Download Blazor App Artifact"

          - task: AzureStaticWebApp@0
            inputs:
              azure_static_web_apps_api_token: $(ado.azureStaticWebAppToken)
              output_location: "$(Pipeline.Workspace)/BlazorApp/wwwroot"
              skip_app_build: true
            displayName: "Deploy to Static Web Apps"
